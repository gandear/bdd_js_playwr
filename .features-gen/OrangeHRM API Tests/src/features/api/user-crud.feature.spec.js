// Generated from: src\features\api\user-crud.feature
import { test } from "../../../../../src/fixtures/api.fixture.js";

test.describe('User CRUD operations', () => {

  test.beforeEach('Background', async ({ Given, logger }) => {
    await Given('I have a valid API endpoint', null, { logger }); 
  });
  
  test.describe('Create users with different data', () => {

    test('Example #1', { tag: ['@crud', '@users', '@post', '@create', '@positive'] }, async ({ Given, apiContext, apiResponse, logger, Then, And }) => { 
      await Given('I send a POST request to "/api/users" with payload:', {"docString":{"content":"{\n  \"name\": \"morpheus\",\n  \"job\": \"leader\"\n}"}}, { apiContext, apiResponse, logger }); 
      await Then('the response status should be 201', null, { apiResponse, logger }); 
      await And('the response should have property "name" with value "morpheus"', null, { apiResponse, logger }); 
      await And('the response should have property "job" with value "leader"', null, { apiResponse, logger }); 
      await And('the response should have property "id"', null, { apiResponse, logger }); 
      await And('the response should have property "createdAt"', null, { apiResponse, logger }); 
    });

    test('Example #2', { tag: ['@crud', '@users', '@post', '@create', '@positive'] }, async ({ Given, apiContext, apiResponse, logger, Then, And }) => { 
      await Given('I send a POST request to "/api/users" with payload:', {"docString":{"content":"{\n  \"name\": \"neo\",\n  \"job\": \"the one\"\n}"}}, { apiContext, apiResponse, logger }); 
      await Then('the response status should be 201', null, { apiResponse, logger }); 
      await And('the response should have property "name" with value "neo"', null, { apiResponse, logger }); 
      await And('the response should have property "job" with value "the one"', null, { apiResponse, logger }); 
      await And('the response should have property "id"', null, { apiResponse, logger }); 
      await And('the response should have property "createdAt"', null, { apiResponse, logger }); 
    });

    test('Example #3', { tag: ['@crud', '@users', '@post', '@create', '@positive'] }, async ({ Given, apiContext, apiResponse, logger, Then, And }) => { 
      await Given('I send a POST request to "/api/users" with payload:', {"docString":{"content":"{\n  \"name\": \"trinity\",\n  \"job\": \"hacker\"\n}"}}, { apiContext, apiResponse, logger }); 
      await Then('the response status should be 201', null, { apiResponse, logger }); 
      await And('the response should have property "name" with value "trinity"', null, { apiResponse, logger }); 
      await And('the response should have property "job" with value "hacker"', null, { apiResponse, logger }); 
      await And('the response should have property "id"', null, { apiResponse, logger }); 
      await And('the response should have property "createdAt"', null, { apiResponse, logger }); 
    });

  });

  test.describe('Update users with PUT and PATCH', () => {

    test('Example #1', { tag: ['@crud', '@users', '@put', '@patch', '@update', '@regression'] }, async ({ Given, apiContext, apiResponse, logger, Then, And }) => { 
      await Given('I send a PUT request to "/api/users/2" with payload:', {"docString":{"content":"{\n  \"name\": \"morpheus\",\n  \"job\": \"zion resident\"\n}"}}, { apiContext, apiResponse, logger }); 
      await Then('the response status should be 200', null, { apiResponse, logger }); 
      await And('the response should have property "name" with value "morpheus"', null, { apiResponse, logger }); 
      await And('the response should have property "job" with value "zion resident"', null, { apiResponse, logger }); 
      await And('the response should have property "updatedAt"', null, { apiResponse, logger }); 
    });

    test('Example #2', { tag: ['@crud', '@users', '@put', '@patch', '@update', '@regression'] }, async ({ Given, apiContext, apiResponse, logger, Then, And }) => { 
      await Given('I send a PATCH request to "/api/users/2" with payload:', {"docString":{"content":"{\n  \"name\": \"neo\",\n  \"job\": \"savior\"\n}"}}, { apiContext, apiResponse, logger }); 
      await Then('the response status should be 200', null, { apiResponse, logger }); 
      await And('the response should have property "name" with value "neo"', null, { apiResponse, logger }); 
      await And('the response should have property "job" with value "savior"', null, { apiResponse, logger }); 
      await And('the response should have property "updatedAt"', null, { apiResponse, logger }); 
    });

  });

  test.describe('Delete users from different endpoints', () => {

    test('Example #1', { tag: ['@crud', '@users', '@delete', '@remove', '@regression'] }, async ({ Given, apiContext, apiResponse, logger, Then }) => { 
      await Given('I send a DELETE request to "/api/users/2"', null, { apiContext, apiResponse, logger }); 
      await Then('the response status should be 204', null, { apiResponse, logger }); 
    });

    test('Example #2', { tag: ['@crud', '@users', '@delete', '@remove', '@regression'] }, async ({ Given, apiContext, apiResponse, logger, Then }) => { 
      await Given('I send a DELETE request to "/api/users/3"', null, { apiContext, apiResponse, logger }); 
      await Then('the response status should be 204', null, { apiResponse, logger }); 
    });

    test('Example #3', { tag: ['@crud', '@users', '@delete', '@remove', '@regression'] }, async ({ Given, apiContext, apiResponse, logger, Then }) => { 
      await Given('I send a DELETE request to "/api/users/4"', null, { apiContext, apiResponse, logger }); 
      await Then('the response status should be 204', null, { apiResponse, logger }); 
    });

  });

});

// == technical section ==

test.use({
  $test: ({}, use) => use(test),
  $uri: ({}, use) => use('src\\features\\api\\user-crud.feature'),
  $bddFileData: ({}, use) => use(bddFileData),
});

const bddFileData = [ // bdd-data-start
  {"pwTestLine":12,"pickleLine":24,"tags":["@crud","@users","@post","@create","@positive"],"steps":[{"pwStepLine":7,"gherkinStepLine":5,"keywordType":"Context","textWithKeyword":"Given I have a valid API endpoint","isBg":true,"stepMatchArguments":[]},{"pwStepLine":13,"gherkinStepLine":9,"keywordType":"Context","textWithKeyword":"Given I send a POST request to \"/api/users\" with payload:","stepMatchArguments":[{"group":{"start":9,"value":"POST","children":[]},"parameterTypeName":"word"},{"group":{"start":25,"value":"\"/api/users\"","children":[{"start":26,"value":"/api/users","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]},{"pwStepLine":14,"gherkinStepLine":16,"keywordType":"Outcome","textWithKeyword":"Then the response status should be 201","stepMatchArguments":[{"group":{"start":30,"value":"201","children":[]},"parameterTypeName":"int"}]},{"pwStepLine":15,"gherkinStepLine":17,"keywordType":"Outcome","textWithKeyword":"And the response should have property \"name\" with value \"morpheus\"","stepMatchArguments":[{"group":{"start":34,"value":"\"name\"","children":[{"start":35,"value":"name","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"},{"group":{"start":52,"value":"\"morpheus\"","children":[{"start":53,"value":"morpheus","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]},{"pwStepLine":16,"gherkinStepLine":18,"keywordType":"Outcome","textWithKeyword":"And the response should have property \"job\" with value \"leader\"","stepMatchArguments":[{"group":{"start":34,"value":"\"job\"","children":[{"start":35,"value":"job","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"},{"group":{"start":51,"value":"\"leader\"","children":[{"start":52,"value":"leader","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]},{"pwStepLine":17,"gherkinStepLine":19,"keywordType":"Outcome","textWithKeyword":"And the response should have property \"id\"","stepMatchArguments":[{"group":{"start":34,"value":"\"id\"","children":[{"start":35,"value":"id","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]},{"pwStepLine":18,"gherkinStepLine":20,"keywordType":"Outcome","textWithKeyword":"And the response should have property \"createdAt\"","stepMatchArguments":[{"group":{"start":34,"value":"\"createdAt\"","children":[{"start":35,"value":"createdAt","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]}]},
  {"pwTestLine":21,"pickleLine":25,"tags":["@crud","@users","@post","@create","@positive"],"steps":[{"pwStepLine":7,"gherkinStepLine":5,"keywordType":"Context","textWithKeyword":"Given I have a valid API endpoint","isBg":true,"stepMatchArguments":[]},{"pwStepLine":22,"gherkinStepLine":9,"keywordType":"Context","textWithKeyword":"Given I send a POST request to \"/api/users\" with payload:","stepMatchArguments":[{"group":{"start":9,"value":"POST","children":[]},"parameterTypeName":"word"},{"group":{"start":25,"value":"\"/api/users\"","children":[{"start":26,"value":"/api/users","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]},{"pwStepLine":23,"gherkinStepLine":16,"keywordType":"Outcome","textWithKeyword":"Then the response status should be 201","stepMatchArguments":[{"group":{"start":30,"value":"201","children":[]},"parameterTypeName":"int"}]},{"pwStepLine":24,"gherkinStepLine":17,"keywordType":"Outcome","textWithKeyword":"And the response should have property \"name\" with value \"neo\"","stepMatchArguments":[{"group":{"start":34,"value":"\"name\"","children":[{"start":35,"value":"name","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"},{"group":{"start":52,"value":"\"neo\"","children":[{"start":53,"value":"neo","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]},{"pwStepLine":25,"gherkinStepLine":18,"keywordType":"Outcome","textWithKeyword":"And the response should have property \"job\" with value \"the one\"","stepMatchArguments":[{"group":{"start":34,"value":"\"job\"","children":[{"start":35,"value":"job","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"},{"group":{"start":51,"value":"\"the one\"","children":[{"start":52,"value":"the one","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]},{"pwStepLine":26,"gherkinStepLine":19,"keywordType":"Outcome","textWithKeyword":"And the response should have property \"id\"","stepMatchArguments":[{"group":{"start":34,"value":"\"id\"","children":[{"start":35,"value":"id","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]},{"pwStepLine":27,"gherkinStepLine":20,"keywordType":"Outcome","textWithKeyword":"And the response should have property \"createdAt\"","stepMatchArguments":[{"group":{"start":34,"value":"\"createdAt\"","children":[{"start":35,"value":"createdAt","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]}]},
  {"pwTestLine":30,"pickleLine":26,"tags":["@crud","@users","@post","@create","@positive"],"steps":[{"pwStepLine":7,"gherkinStepLine":5,"keywordType":"Context","textWithKeyword":"Given I have a valid API endpoint","isBg":true,"stepMatchArguments":[]},{"pwStepLine":31,"gherkinStepLine":9,"keywordType":"Context","textWithKeyword":"Given I send a POST request to \"/api/users\" with payload:","stepMatchArguments":[{"group":{"start":9,"value":"POST","children":[]},"parameterTypeName":"word"},{"group":{"start":25,"value":"\"/api/users\"","children":[{"start":26,"value":"/api/users","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]},{"pwStepLine":32,"gherkinStepLine":16,"keywordType":"Outcome","textWithKeyword":"Then the response status should be 201","stepMatchArguments":[{"group":{"start":30,"value":"201","children":[]},"parameterTypeName":"int"}]},{"pwStepLine":33,"gherkinStepLine":17,"keywordType":"Outcome","textWithKeyword":"And the response should have property \"name\" with value \"trinity\"","stepMatchArguments":[{"group":{"start":34,"value":"\"name\"","children":[{"start":35,"value":"name","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"},{"group":{"start":52,"value":"\"trinity\"","children":[{"start":53,"value":"trinity","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]},{"pwStepLine":34,"gherkinStepLine":18,"keywordType":"Outcome","textWithKeyword":"And the response should have property \"job\" with value \"hacker\"","stepMatchArguments":[{"group":{"start":34,"value":"\"job\"","children":[{"start":35,"value":"job","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"},{"group":{"start":51,"value":"\"hacker\"","children":[{"start":52,"value":"hacker","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]},{"pwStepLine":35,"gherkinStepLine":19,"keywordType":"Outcome","textWithKeyword":"And the response should have property \"id\"","stepMatchArguments":[{"group":{"start":34,"value":"\"id\"","children":[{"start":35,"value":"id","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]},{"pwStepLine":36,"gherkinStepLine":20,"keywordType":"Outcome","textWithKeyword":"And the response should have property \"createdAt\"","stepMatchArguments":[{"group":{"start":34,"value":"\"createdAt\"","children":[{"start":35,"value":"createdAt","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]}]},
  {"pwTestLine":43,"pickleLine":44,"tags":["@crud","@users","@put","@patch","@update","@regression"],"steps":[{"pwStepLine":7,"gherkinStepLine":5,"keywordType":"Context","textWithKeyword":"Given I have a valid API endpoint","isBg":true,"stepMatchArguments":[]},{"pwStepLine":44,"gherkinStepLine":30,"keywordType":"Context","textWithKeyword":"Given I send a PUT request to \"/api/users/2\" with payload:","stepMatchArguments":[{"group":{"start":9,"value":"PUT","children":[]},"parameterTypeName":"word"},{"group":{"start":24,"value":"\"/api/users/2\"","children":[{"start":25,"value":"/api/users/2","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]},{"pwStepLine":45,"gherkinStepLine":37,"keywordType":"Outcome","textWithKeyword":"Then the response status should be 200","stepMatchArguments":[{"group":{"start":30,"value":"200","children":[]},"parameterTypeName":"int"}]},{"pwStepLine":46,"gherkinStepLine":38,"keywordType":"Outcome","textWithKeyword":"And the response should have property \"name\" with value \"morpheus\"","stepMatchArguments":[{"group":{"start":34,"value":"\"name\"","children":[{"start":35,"value":"name","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"},{"group":{"start":52,"value":"\"morpheus\"","children":[{"start":53,"value":"morpheus","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]},{"pwStepLine":47,"gherkinStepLine":39,"keywordType":"Outcome","textWithKeyword":"And the response should have property \"job\" with value \"zion resident\"","stepMatchArguments":[{"group":{"start":34,"value":"\"job\"","children":[{"start":35,"value":"job","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"},{"group":{"start":51,"value":"\"zion resident\"","children":[{"start":52,"value":"zion resident","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]},{"pwStepLine":48,"gherkinStepLine":40,"keywordType":"Outcome","textWithKeyword":"And the response should have property \"updatedAt\"","stepMatchArguments":[{"group":{"start":34,"value":"\"updatedAt\"","children":[{"start":35,"value":"updatedAt","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]}]},
  {"pwTestLine":51,"pickleLine":45,"tags":["@crud","@users","@put","@patch","@update","@regression"],"steps":[{"pwStepLine":7,"gherkinStepLine":5,"keywordType":"Context","textWithKeyword":"Given I have a valid API endpoint","isBg":true,"stepMatchArguments":[]},{"pwStepLine":52,"gherkinStepLine":30,"keywordType":"Context","textWithKeyword":"Given I send a PATCH request to \"/api/users/2\" with payload:","stepMatchArguments":[{"group":{"start":9,"value":"PATCH","children":[]},"parameterTypeName":"word"},{"group":{"start":26,"value":"\"/api/users/2\"","children":[{"start":27,"value":"/api/users/2","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]},{"pwStepLine":53,"gherkinStepLine":37,"keywordType":"Outcome","textWithKeyword":"Then the response status should be 200","stepMatchArguments":[{"group":{"start":30,"value":"200","children":[]},"parameterTypeName":"int"}]},{"pwStepLine":54,"gherkinStepLine":38,"keywordType":"Outcome","textWithKeyword":"And the response should have property \"name\" with value \"neo\"","stepMatchArguments":[{"group":{"start":34,"value":"\"name\"","children":[{"start":35,"value":"name","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"},{"group":{"start":52,"value":"\"neo\"","children":[{"start":53,"value":"neo","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]},{"pwStepLine":55,"gherkinStepLine":39,"keywordType":"Outcome","textWithKeyword":"And the response should have property \"job\" with value \"savior\"","stepMatchArguments":[{"group":{"start":34,"value":"\"job\"","children":[{"start":35,"value":"job","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"},{"group":{"start":51,"value":"\"savior\"","children":[{"start":52,"value":"savior","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]},{"pwStepLine":56,"gherkinStepLine":40,"keywordType":"Outcome","textWithKeyword":"And the response should have property \"updatedAt\"","stepMatchArguments":[{"group":{"start":34,"value":"\"updatedAt\"","children":[{"start":35,"value":"updatedAt","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]}]},
  {"pwTestLine":63,"pickleLine":54,"tags":["@crud","@users","@delete","@remove","@regression"],"steps":[{"pwStepLine":7,"gherkinStepLine":5,"keywordType":"Context","textWithKeyword":"Given I have a valid API endpoint","isBg":true,"stepMatchArguments":[]},{"pwStepLine":64,"gherkinStepLine":49,"keywordType":"Context","textWithKeyword":"Given I send a DELETE request to \"/api/users/2\"","stepMatchArguments":[{"group":{"start":9,"value":"DELETE","children":[]},"parameterTypeName":"word"},{"group":{"start":27,"value":"\"/api/users/2\"","children":[{"start":28,"value":"/api/users/2","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]},{"pwStepLine":65,"gherkinStepLine":50,"keywordType":"Outcome","textWithKeyword":"Then the response status should be 204","stepMatchArguments":[{"group":{"start":30,"value":"204","children":[]},"parameterTypeName":"int"}]}]},
  {"pwTestLine":68,"pickleLine":55,"tags":["@crud","@users","@delete","@remove","@regression"],"steps":[{"pwStepLine":7,"gherkinStepLine":5,"keywordType":"Context","textWithKeyword":"Given I have a valid API endpoint","isBg":true,"stepMatchArguments":[]},{"pwStepLine":69,"gherkinStepLine":49,"keywordType":"Context","textWithKeyword":"Given I send a DELETE request to \"/api/users/3\"","stepMatchArguments":[{"group":{"start":9,"value":"DELETE","children":[]},"parameterTypeName":"word"},{"group":{"start":27,"value":"\"/api/users/3\"","children":[{"start":28,"value":"/api/users/3","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]},{"pwStepLine":70,"gherkinStepLine":50,"keywordType":"Outcome","textWithKeyword":"Then the response status should be 204","stepMatchArguments":[{"group":{"start":30,"value":"204","children":[]},"parameterTypeName":"int"}]}]},
  {"pwTestLine":73,"pickleLine":56,"tags":["@crud","@users","@delete","@remove","@regression"],"steps":[{"pwStepLine":7,"gherkinStepLine":5,"keywordType":"Context","textWithKeyword":"Given I have a valid API endpoint","isBg":true,"stepMatchArguments":[]},{"pwStepLine":74,"gherkinStepLine":49,"keywordType":"Context","textWithKeyword":"Given I send a DELETE request to \"/api/users/4\"","stepMatchArguments":[{"group":{"start":9,"value":"DELETE","children":[]},"parameterTypeName":"word"},{"group":{"start":27,"value":"\"/api/users/4\"","children":[{"start":28,"value":"/api/users/4","children":[{"children":[]}]},{"children":[{"children":[]}]}]},"parameterTypeName":"string"}]},{"pwStepLine":75,"gherkinStepLine":50,"keywordType":"Outcome","textWithKeyword":"Then the response status should be 204","stepMatchArguments":[{"group":{"start":30,"value":"204","children":[]},"parameterTypeName":"int"}]}]},
]; // bdd-data-end